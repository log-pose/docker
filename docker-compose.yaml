version: '3'

services:
  postgres:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
      - POSTGRES_DB=postgres
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
  nakama:
    image: nakama
    ports:
      - "7350:7350"
    depends_on:
      postgres:
        condition: service_healthy

    environment:
      - PSQL_USER=${PSQL_USER}
      - PSQL_PASSWORD=${PSQL_PASSWORD}
      - PSQL_DB=${PSQL_DATABASE}
      - PSQL_HOST=postgres
      - PSQL_PORT=${PSQL_PORT}
      - NAKAMA_NAME=${NAKAMA_NAME}
      - NAKAMA_PORT=${NAKAMA_PORT}
      - JWT_SECRET=${JWT_SECRET}
  room:
    image: room
    ports:
      - "7650:7650"
  influxdb:
    image: influxdb:2.7-alpine
    ports:
      - "8086:8086"
    volumes:
      - influx:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=lp
      - DOCKER_INFLUXDB_INIT_ORG=logpose
      - DOCKER_INFLUXDB_INIT_BUCKET=logpose
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=logpose
  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"

volumes:
  influx:
  postgres:

